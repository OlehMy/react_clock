{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerForClockId","this","window","setInterval","setState","console","info","toLocaleTimeString","prevProps","clockName","props","prevClockName","debug","clearInterval","className","Component","App","hasClock","timerForNameId","handleRightClick","event","preventDefault","handleLeftClick","getRandomName","value","now","toString","slice","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"kOAWaA,EAAb,4MACEC,MAAyB,CACvBC,MAAO,IAAIC,MAFf,EAKEC,gBAAkB,EALpB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,gBAAkBE,OAAOC,aAAY,WACxC,IAAQL,EAAU,EAAKD,MAAfC,MAER,EAAKM,SAAS,CAAEN,MAAO,IAAIC,OAG3BM,QAAQC,KAAKR,EAAMS,wBAClB,OAfP,gCAkBE,SAAmBC,GACjB,IAAQC,EAAcR,KAAKS,MAAnBD,UACWE,EAAkBH,EAA7BC,UAEJA,IAAcE,GAEhBN,QAAQO,MAAR,uBAA8BD,EAA9B,eAAkDF,MAxBxD,kCA4BE,WACEP,OAAOW,cAAcZ,KAAKD,mBA7B9B,oBAgCE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACAW,EAAcR,KAAKS,MAAnBD,UAER,OACE,sBAAKK,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAGF,YAED,sBAAMK,UAAU,cAAhB,SACGhB,EAAMS,8BA7CjB,GAA2BQ,aCFdC,G,MAAb,4MACEnB,MAAyB,CACvBoB,UAAU,EACVR,UAAW,WAHf,EAMES,eAAiB,EANnB,EAuBEC,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,EAAKjB,SAAS,CAAEa,UAAU,KAzB9B,EA4BEK,gBAAkB,WAChB,EAAKlB,SAAS,CAAEa,UAAU,KA7B9B,EAgCEM,cAAgB,WACd,IAAMC,EAAQzB,KAAK0B,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,IAnCpB,uDAQE,WAAqB,IAAD,OAClBI,SAASC,iBAAiB,cAAe5B,KAAKkB,kBAC9CS,SAASC,iBAAiB,QAAS5B,KAAKqB,iBAExCrB,KAAKiB,eAAiBhB,OAAOC,aAAY,WACvC,EAAKC,SAAS,CAAEK,UAAW,EAAKc,oBAC/B,QAdP,kCAiBE,WACEK,SAASE,oBAAoB,cAAe7B,KAAKkB,kBACjDS,SAASE,oBAAoB,QAAS7B,KAAKqB,iBAC3CpB,OAAOW,cAAcZ,KAAKiB,kBApB9B,oBAsCE,WACE,MAAgCjB,KAAKJ,MAA7BoB,EAAR,EAAQA,SAAUR,EAAlB,EAAkBA,UAElB,OACE,sBAAKK,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,yBAGEG,GACK,cAAC,EAAD,CAAOR,UAAWA,WA/CjC,GAAyBM,cCNzBgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.99982ce1.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Clock.scss';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  today: Date;\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    today: new Date(),\n  };\n\n  timerForClockId = 0;\n\n  componentDidMount() {\n    this.timerForClockId = window.setInterval(() => {\n      const { today } = this.state;\n\n      this.setState({ today: new Date() });\n\n      // eslint-disable-next-line\n      console.info(today.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { clockName } = this.props;\n    const { clockName: prevClockName } = prevProps;\n\n    if (clockName !== prevClockName) {\n      // eslint-disable-next-line\n      console.debug(`Renamed from ${prevClockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerForClockId);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './components';\nimport './App.scss';\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerForNameId = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.handleRightClick);\n    document.addEventListener('click', this.handleLeftClick);\n\n    this.timerForNameId = window.setInterval(() => {\n      this.setState({ clockName: this.getRandomName() });\n    }, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.handleRightClick);\n    document.removeEventListener('click', this.handleLeftClick);\n    window.clearInterval(this.timerForNameId);\n  }\n\n  handleRightClick = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleLeftClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  getRandomName = (): string => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__title\">React clock</h1>\n\n        {\n          hasClock\n            && <Clock clockName={clockName} />\n        }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}